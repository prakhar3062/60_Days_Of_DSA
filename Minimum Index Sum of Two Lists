// Brute force
class Solution
{
    public:
        vector<string> findRestaurant(vector<string> &a, vector<string> &b)
        {
            vector<string> c;
            int min = INT_MAX;
            for (int i = 0; i < a.size(); i++)
            {
                for (int j = 0; j < b.size(); j++)
                {
                    if (a[i] == b[j])
                    {
                        if (i + j < min)
                        {
                            min = i + j;
                            c.clear();
                            c.push_back(a[i]);
                        }
                        else if (i + j == min)
                        {
                            c.push_back(a[i]);
                        }
                    }
                }
            }
            return c;
        }
};
// Using Hashmap
class Solution {
public:
    vector<string> findRestaurant(vector<string>& list1, vector<string>& list2) {
        vector<string>ans;
        map<string,int> m;
        for(int i=0;i<list2.size();i++){
            m.insert(make_pair(list2[i],i));
        }
        int min=INT_MAX;
        for(int i=0;i<list1.size();i++){
            if(m.count(list1[i])>0){
                int j=m[list1[i]];
                if (i + j < min)
                        {
                            min = i + j;
                            ans.clear();
                            ans.push_back(list1[i]);
                        }
                        else if (i + j == min)
                        {
                            ans.push_back(list1[i]);
                        }
                    
            }
        }
        return ans;
        
    }
};
